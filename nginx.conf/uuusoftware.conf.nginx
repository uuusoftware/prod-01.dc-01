map $sent_http_content_type $expires {
  default                    max;
  # ~text/html                 30s;
  # ~text/html                 10m;
  # ~(image|font|audio|video)/ max;
  # ~application/              7d;
  # ~application/              max;
  # ~text/                     7d;
  # ~text/                     max;
}

map $subdomain  $headernoindexvalue {
  default  'noindex';
  master   '';
  www     '';
  ""    '';
}

server {
  listen 443 ssl http2;
  server_name  uuusoftware.com ~^(?<subdomain>[^\.]+)\.uuusoftware\.com$;

  ssl_certificate /etc/nginx/ssl/certificate/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/certificate/privkey.pem;

  expires $expires;

  add_header Pragma "public";
  add_header Cache-Control "public";

  access_log off;

  error_page 404 /404-inlined.html;

  set $subdomainfolder $subdomain;
  if ($subdomain = '') { set $subdomainfolder 'master'; }
  if ($subdomain = 'www') { set $subdomainfolder 'master'; } # // TODO Remove after 2024-10-01
  if ($subdomain = 'www') {
    rewrite ^/(.*)$ https://uuusoftware.com/$1 permanent;
  }
  if ($subdomain = 'master') {
    set $subdomainfolder '.unexisted-dummy-domain';
  }

  add_header X-Robots-Tag $headernoindexvalue always;

  location / {
    root /www/uuusoftware.com;
    try_files
        /$subdomainfolder$uri
        /$subdomainfolder$uri/index.html
        /$subdomainfolder$uri.html
        /master$uri
        =404;
  }

  location = /404-inlined.html {
    root /www/uuusoftware.com/master;
    internal;
  }

  gzip on;
  # gzip_types text/html already included by default
  gzip_types text/plain text/css text/javascript image/svg+xml image/x-icon application/javascript application/x-javascript application/json;

  brotli on;
  # brotli_types text/html already included by default
  brotli_types text/plain text/css text/javascript image/svg+xml image/x-icon application/javascript application/x-javascript application/json;

  # add_header Content-Security-Policy "default-src 'self';" always;
  # add_header Content-Security-Policy "script-src 'unsafe-inline';" always;

  # Content-Security-Policy
  # Docs: https://chrisguitarguy.com/2019/07/05/working-with-multiple-content-security-policy-headers/
  set $CSP "img-src 'self' data: https://*.google-analytics.com https://*.doubleclick.net";
  # 'unsafe-inline' - For partytown and boot js execute
  set $CSP "${CSP}; script-src 'self' 'unsafe-inline' https://*.google-analytics.com https://*.googletagmanager.com";
  set $CSP "${CSP}; script-src-elem 'self' 'unsafe-inline' 'strict-dynamic' https://*.google-analytics.com https://*.googletagmanager.com";
  set $CSP "${CSP}; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com";
  set $CSP "${CSP}; style-src-elem 'self' https://fonts.googleapis.com";
  set $CSP "${CSP}; font-src 'self' https://fonts.gstatic.com";
  set $CSP "${CSP}; connect-src 'self' https://*.google-analytics.com";
  set $CSP "${CSP}; frame-src 'self' https://accounts.google.com";
  set $CSP "${CSP}; default-src 'self'";

  add_header Content-Security-Policy $CSP;
}
